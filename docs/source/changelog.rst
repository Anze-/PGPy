:tocdepth: 2

.. _changes::

Changelog
*********

v0.2.3
======

PGPy v0.2.3 is a bugfix release

Bugs Fixed
----------
 * Fixed an issue where explicitly selecting a key and then trying to validate with it would erroneously raise an exception as though the wrong key were selected.

v0.2.2
======

PGPy v0.2.2 is primarily a bugfix release.

Bugs Fixed
----------
 * Fixed a typo that would cause TypeError to be raised as bytecode was being generated (#85)
 * Fixed an issue where unicode input on Python 2.7 could result in unexpected UnicodeDecodeError exceptions being raised

New Features
------------
 * Switched the main parse loop to use a bytearray instead of slicing a bytes, resulting in a ~160x speedup in parsing large blocks of pasing. (#87)

v0.2.1
======

PGPy v0.2.1 is primarily a bugfix release.

Bugs Fixed
----------

 * Critical bit on signature subpackets was being ignored, and when set, causing a ValueError to be raised when trying to parse it.
   The critical bit is now being parsed and masked out correctly. (#81)
 * No longer raises exceptions on unrecognized subpackets; instead, it now treats them as opaque.
 * No longer raises exceptions on unrecognized packets; instead, it now treats them as opaque.
   This also applies to signature and key packets with versions other than v4.
 * Fixed an issue where a User ID packet that lacked both a comment and an email address was failing to be found by the uid regex in KeyCollection.
 * Fixed an issue where an old-format packet header with a length_type set longer than needed was resulting in the packet getting truncated.
 * Fixed an issue where parsing a subpacket with a 2-byte length was erroneously being parsed as a 5-byte length.
 * Fixed an issue where parsing a subpacket with a 5-byte length where the value was < 8434 was causing an error
 * Fixed an issue where a packet or subpacket reporting a value marked reserved in RFC 4880 would cause ValueError to be raised during parsing.
 * Key material marked as public key algorithm 20 (Reserved - Formerly ElGamal Encrypt or Sign) is now parsed as ElGamal key material.
 * Fixed an issue where parsing a new-format packet header length where the first octet was 223 was erroneously reported as being malformed.

New Features
------------
 * Added support for parsing the 'Preferred Key Server' signature subpacket
 * Added support for loading unsupported or unrecognized signature subpackets.
 * Added support for loading unsupported or unrecognized packets.

v0.2.0
======

Starting with v0.2.0, PGPy is now using the BSD 3-Clause license. v0.1.0 used the MIT license.

New Features
------------

 * Subkeys can now be accessed and used for actions supported by PGPKeyring (#67)
 * DSA:

   - Signing of binary documents now works (#16)
   - Verification of signatures of binary documents now works (#15)

 * Can now decrypt secret key material that was encrypted using:

   - Camellia128 (#36)
   - Camellia192 (#37)
   - Camellia256 (#38)
   - AES128 (#32)
   - AES192 (#33)
   - AES256 (#34)
   - Blowfish (#31)
   - Triple-DES (#30)
   - IDEA (#29)

 * PGP packets generated by PGPy now exclusively use new-style header lengths (#47)
 * GPG Trust Packets are now understood and fully parsed (#14)
 * Lots more packet types are now fully parsed

Known Issues
------------

 * Signing with 1024-bit DSA keys does not work with OpenSSL 0.9.8 (#48) - this primarily affects Mac OS X.
 * Verifying signatures signed with any DSA key length other than 2048-bits does not work with OpenSSL 0.9.8 - this primarily affects Mac OS X.

Bugs Fixed
----------

 * PGP blocks loaded from ASCII armored blocks now retain their ASCII headers (#54)
 * PGP new-style packet headers were not being properly parsed in all cases
 * Many unit test enhancements

v0.1.0
======

Initial release.
